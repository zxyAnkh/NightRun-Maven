<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zucc.web.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.edu.zucc.web.model.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="userno" jdbcType="VARCHAR" property="userno"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="userbranch" jdbcType="VARCHAR" property="userbranch"/>
        <result column="usergrade" jdbcType="VARCHAR" property="usergrade"/>
        <result column="addtime" jdbcType="TIMESTAMP" property="addtime"/>
        <result column="deltime" jdbcType="TIMESTAMP" property="deltime"/>
    </resultMap>
    <select id="selectByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where userno LIKE #{userno} OR username LIKE #{username}
  </select>
    <select id="selectByKeywordPage" resultMap="BaseResultMap">
        select *
        from user
        where userno LIKE #{keyword,jdbcType=VARCHAR} OR username LIKE #{keyword,jdbcType=VARCHAR}
        limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
    </select>
    <delete id="deleteByUserid" parameterType="java.lang.Integer">
    UPDATE user SET deltime = CURRENT_TIME
    WHERE id = #{id,jdbcType=INTEGER}
  </delete>
    <update id="updateDelByUserid" parameterType="java.lang.Integer">
        UPDATE user set deltime = NULL
        WHERE id=#{id,jdbcType=INTEGER}
    </update>
    <insert id="insert" parameterType="cn.edu.zucc.web.model.User">
    insert into user (userno,username,password,userbranch,usergrade,addtime)
    values (#{userno,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{userbranch,jdbcType=VARCHAR}, #{usergrade,jdbcType=VARCHAR}, 
      CURRENT_TIME)
  </insert>
    <update id="updateByRecord" parameterType="cn.edu.zucc.web.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            deltime = #{deltime,jdbcType=TIMESTAMP},
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 用户登录验证查询 -->
    <select id="authentication" parameterType="map" resultMap="BaseResultMap">
        select *
        from user
        where userno = #{record.userno} and password = #{record.password}
    </select>
    <!-- 通过学号获取密码 -->
    <select id="selectPwdByUserno" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT password
    FROM user
    WHERE userno=#{userno,jdbcType=VARCHAR}
  </select>
    <!-- 根据用户名查询用户 -->
    <select id="selectByUserno" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
        from user
        where userno = #{record.userno}
    </select>
    <!-- 获取活跃用户 -->
    <select id="selectActiveUsers" resultMap="BaseResultMap">
        SELECT user.id,user.userno,user.username,user.userbranch,user.usergrade,user.addtime,user.deltime
        FROM user,user_role
        WHERE user.id = user_role.user_id AND role_id = 2 and user.deltime is NULL
        ORDER BY user.userno
        limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
    </select>
    <!-- 获取非活跃用户 -->
    <select id="selectNActiveUsers" resultMap="BaseResultMap">
        SELECT user.id,user.userno,user.username,user.userbranch,user.usergrade,user.addtime,user.deltime
        FROM user,user_role
        WHERE user.id = user_role.user_id AND role_id = 2
        limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
    </select>
</mapper>